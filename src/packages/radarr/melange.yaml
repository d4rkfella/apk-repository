package:
  name: radarr
  version: "5.21.1.9799"
  epoch: 0
  description: Movie download automation for usenet and torrents.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - icu-libs
      - sqlite-libs
      - libssl3
      - zlib
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      packages:
      - libstdc++
      - icu-libs
      - busybox
      - bash
      - curl
      - yq
pipeline:
  - uses: git-checkout
    with:
      expected-commit: "886db23c58f13e63537c99d0173c2bbfdd7af253"
      repository: https://github.com/Radarr/Radarr
      tag: v${{package.version}}
  - name: Install dependancies
    runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --version $(yq '.variables.dotnetVersion' azure-pipelines.yml)
  - name: Build
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      
      export BROWSERSLIST_IGNORE_OLD_DATA=true
      
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _framework="net6.0"
      _output="_output"
      _destdir="${{targets.destdir}}/usr/lib/radarr"
      _artifacts="$_output/$_framework/$_runtime/publish"    
      
      yarn install --frozen-lockfile --network-timeout 120000       
      
      ulimit -n 4096
      
      dotnet build src \
        -p:AssemblyConfiguration="master" \
        -p:AssemblyVersion="${{package.version}}" \
        -p:RuntimeIdentifiers="$_runtime" \
        -p:Configuration=Release \
        -p:DebugSymbols=false \
        -p:DebugType=none \
        -p:SentryCliExecutable= \
        -p:SentryUploadSymbols=false \
        -p:SentryIncludeSources=false \
        -p:EmbedAllSources=false \
        -t:PublishAllRids
      yarn build --env production --no-stats
      
      chmod +x "$_artifacts"/ffprobe
      
      find "$_artifacts" \( \
        -name "ServiceUninstall.*" -o \
        -name "ServiceInstall.*" -o \
        -name "Radarr.Windows.*" \) -delete
      
      mv "$_output"/UI "$_artifacts"
      
      echo "Preparing package"
      
      mkdir -p "$_destdir" "${{targets.destdir}}"/usr/bin
      printf "UpdateMethod=docker\nBranch=%s\nPackageVersion=%s\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)\n" "master" "${{package.version}}" > "$_destdir"/package_info
      
      cp -af "$_artifacts" "$_destdir"/bin
      
      ln -s /usr/lib/radarr/bin/Radarr "${{targets.destdir}}"/usr/bin/Radarr
  - uses: strip

test:
  environment:
    contents:
      packages:
        - curl
        - bash
        - jq
        - xmlstarlet
        - lttng-ust-dotnet6-compat
  pipeline:
    - name: Check for missing dependancies
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
    - name: Run test script
      runs: |
        EXPECTED_VERSION="${{package.version}}" ./test.sh
update:
  enabled: true
  release-monitor:
    identifier: 377333
