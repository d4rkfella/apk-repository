package:
  name: radarr
  version: "5.21.1.9799"
  epoch: 0
  description: Movie download automation for usenet and torrents.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - icu-libs
      - sqlite-libs
      - libssl3
      - zlib
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - bash
      - curl
      - icu
      - yq
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/Radarr/Radarr
      tag: v${{package.version}}
  - name: Install dependancies
    runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --version $(yq '.variables.dotnetVersion' azure-pipelines.yml)
  - name: Build backend
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _platform="Posix"
      _slnFile="src/Radarr.sln"
      ulimit -n 4096

      echo "Updating Version Info"
      sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>${{package.version}}<\/AssemblyVersion>/g" src/Directory.Build.props
      sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>master<\/AssemblyConfiguration>/g" src/Directory.Build.props
      dotnet new sln -n Radarr.NoTests
      
      find src -name '*.csproj' | grep -v -i '\.Test' | while read proj; do
          dotnet sln Radarr.NoTests.sln add "$proj"
      done
      
      dotnet msbuild -restore Radarr.NoTests.sln -p:SentryCliExecutable= -p:SentryUploadSymbols=false -p:SentryIncludeSources=false -p:EmbedAllSources=false -p:Configuration=Release -p:TargetFramework=net6.0 -p:Platform=$_platform -p:RuntimeIdentifier=$_runtime -t:Publish -p:DebugSymbols=false -p:DebugType=none
  - name: Build frontend
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      yarn install --frozen-lockfile --network-timeout 120000
      yarn lint
      yarn stylelint-linux
      yarn run build --env production
  - name: Prepare package
    runs: |
      _dotnet_arch="x64"
      _framework="net6.0"
      _runtime="linux-$_dotnet_arch"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      _destdir="${{targets.destdir}}/usr/lib/Radarr/bin"

      mkdir -p $_destdir
      printf "UpdateMethod=docker\nBranch=%s\nPackageVersion=%s\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)\n" "master" "${{package.version}}" > ${{targets.destdir}}/usr/lib/Radarr/package_info

      chmod +x "$_artifacts"/ffprobe

      cp -r $_artifacts/* $_destdir
      cp -r $_output/UI $_destdir

      rm -f $_destdir/ServiceUninstall.*
      rm -f $_destdir/ServiceInstall.*

      echo "Removing Radarr.Windows"
      rm $_destdir/Radarr.Windows.*

      echo "Adding LICENSE"
      cp LICENSE $_destdir
  - uses: strip
test:
  environment:
    contents:
      packages:
        - curl
        - bash
        - jq
        - xmlstarlet
        - lttng-ust-dotnet6-compat
  pipeline:
    - name: Check for missing dependancies
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
    - name: Run test script
      runs: |
        EXPECTED_VERSION="${{package.version}}" test/test.sh
update:
  enabled: true
  release-monitor:
    identifier: 377333
