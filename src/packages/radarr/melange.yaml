package:
  name: radarr
  version: "5.21.1.9799"
  epoch: 0
  description: Movie download automation for usenet and torrents.
  copyright:
    - license: GPL-3.0-only
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - dotnet-6-sdk
      - aspnet-7-runtime
      - yarn
      - sqlite-libs
      - nodejs-20
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/Radarr/Radarr
      tag: v${{package.version}}
  - runs: |
      export BROWSERSLIST_IGNORE_OLD_DATA=true
      yarn install --frozen-lockfile --network-timeout 120000
  
  - runs: |
      mkdir -p ${{targets.destdir}}/usr/lib/radarr
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _framework="net7.0"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      ulimit -n 4096
      dotnet restore src
      dotnet publish src --no-restore -f $_framework -p:AssemblyConfiguration="master" -p:AssemblyVersion="${{package.version}}" -p:RuntimeIdentifier="$_runtime" -p:Configuration=Release -p:SelfContained=true -p:PublishSingleFile=false --no-restore --output $_artifacts
      yarn build --env production --no-stats
      chmod +x "$_artifacts"/ffprobe
      find "$_artifacts" \( \
        -name "ServiceUninstall.*" -o \
        -name "ServiceInstall.*" -o \
        -name "Radarr.Windows.*" \) -delete
      mv "$_output"/UI "$_artifacts"
      destdir="${{targets.destdir}}"/usr/lib/radarr
      cp -af "$_artifacts" "$destdir"/bin
