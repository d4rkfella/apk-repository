package:
  name: keycloak-custom
  version: "26.4.2"
  epoch: 0
  description: Open Source Identity and Access Management For Modern Applications and Services
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - merged-usrsbin
      - openjdk-${{vars.java-version}}-default-jvm
      - wolfi-baselayout
var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version
vars:
  java-version: 21
environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - gcc-13-default
      - openjdk-${{vars.java-version}}-default-jdk
      - wolfi-base
      - wolfi-baselayout
  environment:
    LANG: en_US.UTF-8
    JAVA_HOME: /usr/lib/jvm/java-${{vars.java-version}}-openjdk
    REPRODUCIBLE: false
pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/keycloak/keycloak
      tag: ${{package.version}}
      expected-commit: 60dc235ca35db219c25f4ae601d5b91a9a7d31ee
  - uses: maven/pombump
  - runs: |
      gcc napi-static-assert.c -o /tmp/preload.so -fPIC -shared -ldl
  - runs: |
      # Keycloak installation. Note we use the maven wrapper as configured in
      # the source repo to build - ensures the correct maven version for
      # building the project, preventing issues such as CI hangs.

      # Build keycloak-server. Depends on `keycloak-js-adapter-jar`.
      # Gross hack to work around broken NAPI ast-grep module that has
      # undefined symbol: static_assert
      export LD_PRELOAD=/tmp/preload.so
      ./mvnw clean install -DskipTests -Dmaven.test.skip=true -DskipITs -DskipProtoLock=true -Pdistribution
      unset LD_PRELOAD

      mkdir -p ${{targets.destdir}}/usr/share/java
      unzip -d ${{targets.destdir}}/usr/share/java quarkus/dist/target/keycloak-*.zip
      cp -avR ${{targets.destdir}}/usr/share/java/keycloak-* ${{targets.destdir}}/usr/share/java/keycloak

      # Create an empty data directory for keycloak. Required by the UI to store some data.
      mkdir -p ${{targets.destdir}}/usr/share/java/keycloak/data

      mkdir -p ${{targets.destdir}}/usr/bin
      for i in kc.sh kcadm.sh kcreg.sh; do
        ln -sf /usr/share/java/keycloak/bin/$i ${{targets.destdir}}/usr/bin/$i
      done

      export KC_HEALTH_ENABLED=true
      export KC_METRICS_ENABLED=true
      export KC_DB=postgres

      cd "${{targets.destdir}}"/usr/share/java/keycloak && "${{targets.destdir}}"/usr/share/java/keycloak/bin/kc.sh build
subpackages:
  - name: keycloak-compat-custom
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/opt
          ln -s /usr/share/java/keycloak "${{targets.subpkgdir}}"/opt/
    dependencies:
      runtime:
        - merged-usrsbin
        - wolfi-baselayout
test:
  pipeline:
    - name: "start daemon on localhost"
      uses: test/daemon-check-output
      with:
        start: "kc.sh start --hostname=localhost --https-key-store-password=MYPASSWORD"
        timeout: 60
        expected_output: |
          Listening on
          Keycloak ${{package.version}}
          Profile prod activated
        setup: |
          #!/bin/sh -ex
          echo "127.0.0.1 $(hostname)" >> /etc/hosts
          kspath=/usr/share/java/keycloak/conf/server.keystore
          keytool -v \
              -keystore $kspath \
              -alias localhost \
              -genkeypair -sigalg SHA512withRSA -keyalg RSA -dname CN=localhost \
              -storepass MYPASSWORD || {
                echo "failed [$?] to create keystore with keytool at $kspath"
                exit 1
          }
    - name: "version and help tests"
      runs: |
        kc.sh --version
        kc.sh --help
        kcadm.sh --help
        kcreg.sh --help
update:
  ignore-regex-patterns:
    - ".*nightly.*"
  enabled: true
  github:
    identifier: keycloak/keycloak
