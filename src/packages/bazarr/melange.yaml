package:
  name: bazarr
  version: "1.5.2"
  epoch: 1
  description: Bazarr is a companion application to Sonarr and Radarr. It manages and downloads subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - unrar
      - ffmpeg

environment:
  contents:
    packages:
      - python-3.13
      - py3.13-pip
      - py3.13-virtualenv-bin
      - busybox
      - nodejs
      - npm

pipeline:
  - uses: git-checkout
    with:
      expected-commit: eacb8b70682363b33db74ca4beee1be5d4a09c6d
      repository: https://github.com/morpheus65535/bazarr
      tag: v${{package.version}}
  
  - uses: patch
    with:
      patches: GHSA-h95x-26f3-88hr.patch
  
  - name: Build frontend
    working-directory: /home/build/frontend
    runs: |
      npx update-browserslist-db@latest
      npm install
      npm run build
  
  - runs: |
      set -euo pipefail     
      
      DEST_DIR="/tmp"
      LIBS_DIR="libs"

      if [ -d "$LIBS_DIR/waitress-3.0.0.dist-info" ]; then
          rm -rf "$LIBS_DIR/waitress-3.0.0.dist-info"
          pip download --no-deps --dest="$DEST_DIR" waitress==3.0.1
          python3 -m zipfile -e "$DEST_DIR/waitress-3.0.1-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/waitress-3.0.0.dist-info not found, skipping"
      fi
      
      if [ -d "$LIBS_DIR/jinja2-3.1.5.dist-info" ]; then
          rm -rf "$LIBS_DIR/jinja2-3.1.5.dist-info"
          pip download --no-deps --dest="$DEST_DIR" jinja2==3.1.6
          python3 -m zipfile -e "$DEST_DIR/jinja2-3.1.6-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/jinja2-3.1.5.dist-info not found, skipping"
      fi

      if [ -d "$LIBS_DIR/h11-0.14.0.dist-info" ]; then
          rm -rf "$LIBS_DIR/h11-0.14.0.dist-info"
          pip download --no-deps --dest="$DEST_DIR" h11==0.16.0
          python3 -m zipfile -e "$DEST_DIR/h11-0.16.0-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/h11-0.14.0.dist-info not found, skipping"
      fi

      if [ -d "$LIBS_DIR/pillow-11.2.1.dist-info" ]; then
          rm -rf "$LIBS_DIR/pillow-11.2.1.dist-info"
          pip download --no-deps --dest="$DEST_DIR" pillow==11.3.0
          python3 -m zipfile -e "$DEST_DIR/pillow-11.3.0-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/pillow-11.2.1.dist-info not found, skipping"
      fi

      if [ -d "$LIBS_DIR/urllib3-2.2.3.dist-info" ]; then
          rm -rf "$LIBS_DIR/urllib3-2.2.3.dist-info"
          pip download --no-deps --dest="$DEST_DIR" urllib3==2.5.0
          python3 -m zipfile -e "$DEST_DIR/urllib3-2.5.0-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/urllib3-2.2.3.dist-info not found, skipping"
      fi

      if [ -d "$LIBS_DIR/flask-cors-5.0.0.dist-info" ]; then
          rm -rf "$LIBS_DIR/flask-cors-5.0.0.dist-info"
          pip download --no-deps --dest="$DEST_DIR" flask-cors==6.0.0
          python3 -m zipfile -e "$DEST_DIR/flask-cors-6.0.0-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/flask-cors-5.0.0.dist-info not found, skipping"
      fi

      if [ -d "$LIBS_DIR/requests-2.32.3.dist-info" ]; then
          rm -rf "$LIBS_DIR/requests-2.32.3.dist-info"
          pip download --no-deps --dest="$DEST_DIR" requests==2.32.4
          python3 -m zipfile -e "$DEST_DIR/requests-2.32.4-py3-none-any.whl" "$LIBS_DIR/"
      else
          echo "Warning: $LIBS_DIR/requests-2.32.3.dist-info not found, skipping"
      fi
     
      echo "âœ… All tasks completed successfully!"
  
  - name: Enable SSL verification
    runs: |
      set -euo pipefail
      
      if ! head -n 15 "libs/urllib3/connectionpool.py" | grep -q "import ssl"; then
        sed -i '/from __future__ import annotations/a import ssl' "libs/urllib3/connectionpool.py"
        echo "'import ssl' has been added to the top of the file."
      else
        echo "'import ssl' is already present in the file."
      fi
      
      sed -i 's/cert_reqs=self\.cert_reqs/cert_reqs=ssl.CERT_REQUIRED/' "libs/urllib3/connectionpool.py"  
  
  - name: Prepare package
    runs: |
      set -euo pipefail
      
      export LANG=C.UTF-8
      export PYTHONHASHSEED=0
      export PYTHONDONTWRITEBYTECODE=1
      export PYTHONUNBUFFERED=1
      
      APPDIR="${{targets.destdir}}/usr/lib/bazarr/app"
      FILE_LIST="$(cat .github/files_to_copy)"
      
      mkdir -p "${APPDIR}" 
      virtualenv --copies "${APPDIR}/venv"
      sed -i '/lxml/ s/lxml>=4.3.0, <5.0.0/lxml>=5.0.0/' requirements.txt
      sh -c "source '${APPDIR}/venv/bin/activate' && pip install --upgrade --no-cache-dir -r requirements.txt -r postgres-requirements.txt"    
      
      git describe --abbrev=0 > VERSION

      while IFS= read -r f
      do
          echo "**** copying $f to release ****"
          cp -r --parents "$f" "$APPDIR"
      done < .github/files_to_copy      
      
      cp VERSION "${APPDIR}"
      
      printf "UpdateMethod=docker\nBranch=master\nPackageVersion=${{package.version}}\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)" > ${{targets.destdir}}/usr/lib/bazarr/package_info

test:
  environment:
    contents:
      packages:
        - curl
        - bash
        - jq
        - yq
  pipeline:
    - name: Check for missing dependancies
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
    
    - name: Run test script
      runs: |
        EXPECTED_VERSION="${{package.version}}" test/test.sh
