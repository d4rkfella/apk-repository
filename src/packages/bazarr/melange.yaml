package:
  name: bazarr
  version: "1.5.2_beta28"
  epoch: 0
  description: Bazarr is a companion application to Sonarr and Radarr. It manages and downloads subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - wolfi-baselayout
      - tzdata
      - catatonit
      - unrar
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - python-3.12
      - py3.12-pip
      - busybox
      - bash
      - ca-certificates-bundle
      - curl
var-transforms:
  - from: ${{package.version}}
    match: "_beta(\\d+)$"
    replace: "-beta.$1"
    to: transformed-version
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/morpheus65535/bazarr
      tag: v${{vars.transformed-version}}
  
  - name: Install volta
    runs: |
      curl -sSL https://get.volta.sh | bash
  
  - name: Build frontend
    working-directory: /home/build/frontend
    runs: |
      PATH="$PATH:$HOME/.volta/bin"
      NODE_VERSION=$(cat .nvmrc)
      volta install node@${NODE_VERSION}
      npx update-browserslist-db@latest
      npm install
      npm run check:ts
      npm run check
      npm run check:fmt
      npm test -- --run
      npm run build:ci

  - name: Download ffmpeg-static binaries
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      curl -fsSL "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz" | \
      tar xJ --strip-components=2 --exclude='**/LICENSE.txt' --exclude='**/doc' --exclude='**/man' --exclude='**/bin/ffplay' --directory=${{targets.destdir}}/usr/bin

  - name: Enable SSL verification
    runs: |
      if ! head -n 15 "libs/urllib3/connectionpool.py" | grep -q "import ssl"; then
        sed -i '/from __future__ import annotations/a import ssl' "libs/urllib3/connectionpool.py"
        echo "'import ssl' has been added to the top of the file."
      else
        echo "'import ssl' is already present in the file."
      fi
      
      sed -i 's/cert_reqs=self\.cert_reqs/cert_reqs=ssl.CERT_REQUIRED/' "libs/urllib3/connectionpool.py"
  
  - name: Prepare packages
    runs: |
      set -e
      PATH="/usr/lib/Bazarr/venv/bin:$PATH"
      to_dist=${{targets.destdir}}/usr/lib/Bazarr
      file_list=$(cat .github/files_to_copy)
      
      mkdir -p $to_dist
      mkdir -p /usr/lib/Bazarr
      
      python -m venv --copies /usr/lib/Bazarr/venv
      pip install --upgrade --no-cache-dir \
      -r requirements.txt \
      -r postgres-requirements.txt
      
      git describe --abbrev=0 > VERSION
      
      for f in $file_list
      do
          echo "**** copying $f to release ****"
          cp -r --parents "$f" $to_dist
      done
      
      cp VERSION $to_dist
      cp -r /usr/lib/Bazarr/venv $to_dist
