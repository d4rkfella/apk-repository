package:
  name: prowlarr
  version: "1.33.3.5008"
  epoch: 0
  description: Prowlarr is an indexer manager/proxy built on the popular *arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports management of both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Lidarr, Mylar3, Radarr, Readarr, and Sonarr offering complete management of your indexers with no per app Indexer setup required (we do it all).
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - icu-libs
      - sqlite-libs
      - libssl3
      - zlib
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - bash
      - curl
      - icu
      - yq
pipeline:
  - uses: git-checkout
    with:
      expected-commit: "6be4203b4134f4c47d08659110cf11e83c85c945"
      repository: https://github.com/Prowlarr/Prowlarr
      tag: v${{package.version}}
  - name: Install dependancies
    runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --version $(yq '.variables.dotnetVersion' azure-pipelines.yml)
  - name: Build
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      export BROWSERSLIST_IGNORE_OLD_DATA=true

      volta install node@$(yq '.variables.nodeVersion' azure-pipelines.yml)
      volta install yarn@1.22
      
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _framework="net6.0"
      _output="_output"
      _destdir="${{targets.destdir}}/usr/lib/prowlarr"
      _artifacts="$_output/$_framework/$_runtime/publish"    
      
      yarn install --frozen-lockfile --network-timeout 120000       
      
      ulimit -n 4096
      
      dotnet build src \
        -p:AssemblyConfiguration="master" \
        -p:AssemblyVersion="${{package.version}}" \
        -p:RuntimeIdentifiers="$_runtime" \
        -p:Configuration=Release \
        -p:DebugSymbols=false \
        -p:DebugType=none \
        -p:SentryCliExecutable= \
        -p:SentryUploadSymbols=false \
        -p:SentryIncludeSources=false \
        -p:EmbedAllSources=false \
        -t:PublishAllRids
      yarn build --env production --no-stats
            
      find "$_artifacts" \( \
        -name "ServiceUninstall.*" -o \
        -name "ServiceInstall.*" -o \
        -name "Prowlarr.Windows.*" \) -delete
      
      mv "$_output"/UI "$_artifacts"
      
      echo "Preparing package"
      
      mkdir -p "$_destdir" "${{targets.destdir}}"/usr/bin
      printf "UpdateMethod=docker\nBranch=%s\nPackageVersion=%s\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)\n" "master" "${{package.version}}" > "$_destdir"/package_info
      
      cp -af "$_artifacts" "$_destdir"/bin
      
      ln -s /usr/lib/prowlarr/bin/Prowlarr "${{targets.destdir}}"/usr/bin/Prowlarr
test:
  environment:
    contents:
      packages:
        - curl
        - bash
        - jq
        - xmlstarlet
        - lttng-ust-dotnet6-compat
  pipeline:
    - name: Check for missing dependancies
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
    - name: Run test script
      runs: |
        EXPECTED_VERSION="${{package.version}}" ./test.sh
update:
  enabled: true
  release-monitor:
    identifier: 377338
