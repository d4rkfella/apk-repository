package:
  name: sonarr
  version: "4.0.14.2939"
  epoch: 0
  description: Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - icu-libs
      - sqlite-libs
      - libssl3
      - zlib
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - bash
      - curl
      - icu
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/Sonarr/Sonarr
      tag: v${{package.version}}
  
  - name: Install dependancies
    runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --jsonfile global.json
  
  - name: Build
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _platform="Posix"
      _framework="net6.0"
      _slnFile="src/Sonarr.sln"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      _destdir="${{targets.destdir}}/usr/lib/Sonarr/bin"

      echo "Building frontend"
      
      yarn install --frozen-lockfile --network-timeout 120000
      yarn lint
      yarn stylelint -f github
      yarn run build --env production

      echo "Building backend"
      
      ulimit -n 4096
      
      sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>"${{package.version}}"<\/AssemblyVersion>/g" src/Directory.Build.props
      sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>main<\/AssemblyConfiguration>/g" src/Directory.Build.props
      
      dotnet msbuild -restore "$_slnFile" \
       -p:SentryCliExecutable= \
       -p:SentryUploadSymbols=false \
       -p:SentryIncludeSources=false \
       -p:EmbedAllSources=false \
       -p:Configuration=Release \
       -p:TargetFramework="$_framework" \
       -p:Platform=$_platform \
       -p:RuntimeIdentifier="$_runtime" \
       -t:Publish \
       -p:DebugSymbols=false \
       -p:DebugType=none
      
      echo "Preparing package"

      mkdir -p "$_destdir"
      
      printf "UpdateMethod=docker\nBranch=%s\nPackageVersion=%s\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)\n" "main" "${{package.version}}" > "${{targets.destdir}}"/usr/lib/Sonarr/package_info

      chmod +x "$_artifacts"/ffprobe
      
      cp -r "$_artifacts"/* "$_destdir"
      cp -r "$_output"/UI "$_destdir"
      cp LICENSE.md "$_destdir"
      
      rm -f "$_destdir"/ServiceUninstall.*
      rm -f "$_destdir"/ServiceInstall.*
      rm "$_destdir"/Sonarr.Windows.*

      mkdir -p "${{targets.destdir}}"/usr/bin
      ln -s /usr/lib/Radarr/bin/Sonarr "${{targets.destdir}}"/usr/bin/Sonarr
  - uses: strip
test:
  environment:
    contents:
      packages:
        - curl
        - bash
        - jq
        - xmlstarlet
        - lttng-ust-dotnet6-compat
  pipeline:
    - name: Check for missing dependancies
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
    - name: Run test script
      runs: |
        EXPECTED_VERSION="${{package.version}}" test.sh
update:
  enabled: true
  release-monitor:
    identifier: 377336