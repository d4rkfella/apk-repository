package:
  name: sonarr
  version: "4.0.14.2939"
  epoch: 0
  description: Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.
  copyright:
    - license: GPL-3.0-only
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - bash
      - curl
      - icu
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/Sonarr/Sonarr
      tag: v${{package.version}}
  - runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --jsonfile global.json
      export PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
  - runs: |
      export PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      _slnFile=src/Sonarr.sln
      _platform=Posix
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _framework="net6.0"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      ulimit -n 4096
      echo "Updating Version Info"
      sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>${{package.version}}<\/AssemblyVersion>/g" src/Directory.Build.props
      sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>master<\/AssemblyConfiguration>/g" src/Directory.Build.props
      dotnet clean $_slnFile -c Debug
      dotnet clean $_slnFile -c Release
      dotnet msbuild -restore $_slnFile -p:SelfContained=True -p:Configuration=Release -p:Platform=$_platform -p:RuntimeIdentifiers=$_runtime -t:PublishAllRids
      chmod +x "$_artifacts"/ffprobe
  - runs: |
      export PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      export BROWSERSLIST_IGNORE_OLD_DATA=true
      rm -rf /usr/local/share/.cache/yarn
      yarn install --frozen-lockfile --network-timeout 120000
      yarn lint
      yarn stylelint -f github
      yarn run build --env production
  - name: Prepare package
    runs: |
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _framework="net6.0"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      _destdir="${{targets.destdir}}/usr/lib/Sonarr"
      mkdir -p ${{targets.destdir}}/usr/lib/Sonarr
      
      cp -r $_artifacts/* $_destdir
      cp -r $_output/UI $_destdir
      cp -r $_output/Sonarr.Update/$_framework/$_runtime/publish $_destdir/Sonarr.Update
      cp $_destdir/Sonarr.Mono.* $_destdir/Sonarr.Update
      cp $_destdir/Mono.Posix.NETStandard.* $_destdir/Sonarr.Update
      cp $_destdir/libMonoPosixHelper.* $_destdir/Sonarr.Update

      rm -f $_destdir/ServiceUninstall.*
      rm -f $_destdir/ServiceInstall.*
  
      echo "Removing Sonarr.Windows"
      rm $_destdir/Sonarr.Windows.*
  
      echo "Adding LICENSE"
      cp LICENSE.md $_destdir
