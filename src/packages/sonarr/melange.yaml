package:
  name: sonarr
  version: "4.0.14.2939"
  epoch: 0
  description: Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.
  copyright:
    - license: GPL-3.0-only
  dependencies:
    runtime:
      - wolfi-baselayout
      - icu-libs
      - sqlite-libs
      - libssl3
      - zlib
      - tzdata
environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      - https://packages.wolfi.dev/os
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - bash
      - curl
      - icu
pipeline:
  - uses: git-checkout
    with:
      expected-commit: ""
      repository: https://github.com/Sonarr/Sonarr
      tag: v${{package.version}}
  
  - name: Install dependancies
    runs: |
      curl -sSL https://get.volta.sh | bash
      curl -sSL https://builds.dotnet.microsoft.com/dotnet/scripts/v1/dotnet-install.sh | bash -s -- --jsonfile global.json
  
  - name: Build backend
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      _dotnet_arch="x64"
      _runtime="linux-$_dotnet_arch"
      _platform="Posix"
      _slnFile="src/Sonarr.sln"
      ulimit -n 4096
      
      echo "Updating Version Info"
      sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>${{package.version}}<\/AssemblyVersion>/g" src/Directory.Build.props
      sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>main<\/AssemblyConfiguration>/g" src/Directory.Build.props
      dotnet msbuild -restore $_slnFile -p:Configuration=Release -p:Platform=$_platform -p:RuntimeIdentifiers=$_runtime -t:PublishAllRids
  
  - name: Build frontend
    runs: |
      PATH="$HOME/.volta/bin:$HOME/.dotnet:$PATH"
      BROWSERSLIST_IGNORE_OLD_DATA="true"
      
      yarn install --frozen-lockfile --network-timeout 120000
      yarn lint
      yarn stylelint-linux
      yarn run build --env production
  
  - name: Prepare package
    runs: |
      _dotnet_arch="x64"
      _framework="net6.0"
      _runtime="linux-$_dotnet_arch"
      _output="_output"
      _artifacts="$_output/$_framework/$_runtime/publish"
      _destdir="${{targets.destdir}}/usr/lib/Sonarr/bin"
      
      mkdir -p $_destdir
      printf "UpdateMethod=docker\nBranch=%s\nPackageVersion=%s\nPackageAuthor=[d4rkfella](https://github.com/d4rkfella)\n" "main" "${{package.version}}" > ${{targets.destdir}}/usr/lib/Sonarr/package_info

      chmod +x "$_artifacts"/ffprobe
      
      cp -r $_artifacts/* $_destdir
      cp -r $_output/UI $_destdir

      rm -f $_destdir/ServiceUninstall.*
      rm -f $_destdir/ServiceInstall.*
      rm -f $_destdir/Sonarr.Mono.*
      rm -f $_destdir/Mono.Posix.NETStandard.*
      rm -f $_destdir/libMonoPosixHelper.*
  
      echo "Removing Sonarr.Windows"
      rm $_destdir/Sonarr.Windows.*
  
      echo "Adding LICENSE"
      cp LICENSE.md $_destdir
