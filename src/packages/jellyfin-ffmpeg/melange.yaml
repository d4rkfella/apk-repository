package:
  name: jellyfin-ffmpeg
  version: "7.1.1"
  epoch: 0
  description: FFmpeg for Jellyfin with custom extensions and enhancements
  copyright:
    - license: GPL-2.0-or-later AND LGPL-2.1-or-later
environment:
  contents:
    packages:
      - wolfi-base
      - build-base
      - curl
      - dpkg
      - bash
      - chromaprint-dev
      - libbluray-dev
      - fdk-aac-dev
      - libvpl-dev
      - libopenmpt-dev
      - libplacebo-dev
      - libass-dev
      - libvpx-dev
      - zimg-dev
      - zvbi-dev
      - nv-codec-headers
      - amf-headers
pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/jellyfin/jellyfin-ffmpeg
      expected-commit: 9e7002e5dcf7d0760bbf97bf1628106f949e18d0
      tag: v${{package.version}}-1
  
  - runs: |
      apk add \
        dav1d-dev \
        fontconfig-dev \
        fontconfig-static \
        lame-dev \
        libsrt \
        libvorbis-dev \
        libvorbis-static \
        libwebp-dev \
        libwebp-static \
        libxml2-dev \
        openssl-dev \
        opus-dev \
        x264-dev \
        x265-dev \
        yasm \
        fribidi-dev \
        fribidi-static \
        gmp-dev \
        zlib-dev \
        zlib-static \
        vulkan-headers \
        vulkan-loader \
        libtheora-dev \
        svt-av1-dev \
        libtheora-static \
        opencl-dev \
        clang-19 \
        libdrm-dev
  
  - working-directory: /home/build/nvidia-cuda-toolkit
    runs: |
      curl -fsSL -o ./cuda-toolkit.deb https://developer.download.nvidia.com/compute/cuda/12.3.0/local_installers/cuda-repo-ubuntu2204-12-3-local_12.3.0-545.23.06-1_amd64.deb
      dpkg -i ./cuda-toolkit.deb
      dpkg -i --force-depends /var/cuda-repo-*/*.deb 2>&1 || true
      rm ./cuda-toolkit.deb
      export CUDA_HOME="/usr/local/cuda"
      export PATH="$CUDA_HOME/bin:$PATH"
      
  - runs: |
      ./configure \
        --prefix=/usr \
        --pkg-config-flags=--static \
        --pkg-config=pkg-config \
        --arch=x86_64 \
        --target-os=linux \
        --extra-version=Jellyfin \
        --enable-nonfree \
        --extra-cflags="-I$CUDA_HOME/include -I$CUDA_HOME/nvvm/include" \
        --extra-ldflags="-L/usr/lib/x86_64-linux-gnu -L$CUDA_HOME/lib64 -L$CUDA_HOME/nvvm/lib64 -L$CUDA_HOME/targets/x86_64-linux/lib/stubs -lcuda -lnvrtc -lnvvm" \
        --extra-ldexeflags=-pie \
        --extra-libs=-ldl \
        --enable-gpl \
        --enable-version3 \
        --disable-ffplay \
        --disable-debug \
        --disable-doc \
        --disable-sdl2 \
        --disable-libxcb \
        --disable-xlib \
        --enable-lto=auto \
        --enable-iconv \
        --enable-zlib \
        --enable-libfreetype \
        --enable-libfribidi \
        --enable-gmp \
        --enable-libxml2 \
        --enable-openssl \
        --enable-lzma \
        --enable-fontconfig \
        --enable-libharfbuzz \
        --enable-libvorbis \
        --enable-opencl \
        --enable-amf \
        --enable-chromaprint \
        --enable-libdav1d \
        --enable-libfdk-aac \
        --enable-ffnvcodec \
        --enable-cuda \
        --enable-cuda-llvm \
        --enable-cuvid \
        --enable-nvdec \
        --enable-nvenc \
        --enable-libass \
        --enable-libbluray \
        --enable-libmp3lame \
        --enable-libopus \
        --enable-libtheora \
        --enable-libvpl \
        --enable-libvpx \
        --enable-libwebp \
        --enable-libopenmpt \
        --enable-libsrt \
        --enable-libsvtav1 \
        --enable-libdrm \
        --enable-vaapi \
        --enable-vulkan \
        --enable-libshaderc \
        --enable-libplacebo \
        --enable-libx264 \
        --enable-libx265 \
        --enable-libzimg \
        --enable-libzvbi
  
  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip
test:
  pipeline:
    - runs: |
        ffmpeg --help
        ffprobe --help
