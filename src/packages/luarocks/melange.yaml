package:
  name: luarocks
  version: "3.11.1"
  epoch: 10
  description: A package manager for Lua modules
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - curl
      - gcc
      - git
      - luajit-dev-custom
environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - luajit-dev-custom
      - openssl-dev
      - zlib-dev

pipeline:
  - uses: fetch
    with:
      uri: https://luarocks.github.io/luarocks/releases/luarocks-${{package.version}}.tar.gz
      expected-sha256: c3fb3d960dffb2b2fe9de7e3cb004dc4d0b34bb3d342578af84f84325c669102

  - uses: build/gpg-verify
    with:
      signature-uri: https://luarocks.github.io/luarocks/releases/luarocks-${{package.version}}.tar.gz.asc
      public-key-uri: https://hisham.hm/public_key
      filename: luarocks-${{package.version}}.tar.gz
  
  - runs: |
      ./configure \
        --prefix=/usr \
        --with-lua-include=/usr/include/lua \  
  
  - uses: autoconf/make
 
  - uses: autoconf/make-install
  
test:
  environment:
    contents:
      packages:
        - luajit-dev-custom
        - glibc-dev
        - openresty-custom
        - curl
        - wget
        - bash
        - zlib-dev
        - glibc-dev
        - python3
  pipeline:
    - runs: |
        # install lzlib rock
        luarocks --version
        luarocks install lzlib ZLIB_INCDIR=/usr/include

        # start openresty
        cp default.conf /etc/nginx/conf.d/default.conf
        openresty -g "daemon off;" &
        OPENRESTY_PID=$!
        sleep 1

        # Generate zlib-compressed data
        echo -n "Hello from lzlib!" | \
        python3 -c 'import sys,zlib; sys.stdout.buffer.write(zlib.compress(sys.stdin.buffer.read()))' \
        > /tmp/compressed_data.bin

        # 3) Send the POST request to localhost
        curl -i -X POST --data-binary @/tmp/compressed_data.bin http://127.0.0.1:80/

        # 5) Check the error log for our success message
        if grep -q "Successfully decompressed: Hello from lzlib!" /var/log/openresty/all_error.log; then
          echo "Test PASSED: ✔ Found decompressed message."
          kill $OPENRESTY_PID
          exit 0
        else
          echo "Test FAILED: ✗ Message not decompressed!"
          # Show the last few lines of error log to help debug
          echo "Log tail:"
          tail -n 20 /var/log/openresty/all_error.log
          kill $OPENRESTY_PID
          exit 1
        fi

update:
  enabled: true
  release-monitor:
    identifier: 1856
