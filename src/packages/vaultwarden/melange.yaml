package:
  name: vaultwarden
  version: "1.34.3"
  epoch: 0
  description: "Unofficial Bitwarden compatible server written in Rust (glibc)"
  copyright:
    - license: GPL-3.0-or-later

  dependencies:
    runtime:
      - wolfi-base
      - ca-certificates
      - openssl
      - libpq-18
      - vw_web_vault
      - curl

environment:
  environment:
    FEATURES: "postgresql"
    TEST: ${{build.arch}}
  contents:
    packages:
      - wolfi-base
      - cargo-auditable
      - pkgconf
      - clang
      - rust
      - curl
      - openssl-dev
      - postgresql-dev
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/dani-garcia/vaultwarden
      tag: ${{package.version}}
      expected-commit: 5d84f17600e179280e44c391b92ee9eecc2b7cdc
      destination: vaultwarden

  - name: build-vaultwarden
    working-directory: /home/build/vaultwarden
    runs: |
      echo $TEST
      if [[ "${{build.arch}}" == "aarch64" ]]; then
        export CARGO_BUILD_TARGET="aarch64-unknown-linux-gnu"
      elif [[ "${{build.arch}}" == "x86_64" ]]; then
        export CARGO_BUILD_TARGET="x86_64-unknown-linux-gnu"
      fi

      cargo auditable build \
        --features ${FEATURES} \
        --release \
        --target $CARGO_BUILD_TARGET \
        --bin vaultwarden
  
  - uses: strip
  
  - name: prepare-package
    runs: |
      if [[ "${{build.arch}}" == "aarch64" ]]; then
        export CARGO_BUILD_TARGET="aarch64-unknown-linux-gnu"
      elif [[ "${{build.arch}}" == "x86_64" ]]; then
        export CARGO_BUILD_TARGET="x86_64-unknown-linux-gnu"
      fi

      mkdir -p ${{targets.destdir}}/usr/bin
      cp /home/build/vaultwarden/target/$CARGO_BUILD_TARGET/release/vaultwarden ${{targets.destdir}}/usr/bin/vaultwarden
      install -m555 -D start.sh ${{targets.destdir}}/usr/bin/start.sh
