package:
  name: vaultwarden
  version: "1.34.3"
  epoch: 0
  description: "Unofficial Bitwarden compatible server written in Rust (glibc)"
  copyright:
    - license: GPL-3.0-or-later

  dependencies:
    runtime:
      - wolfi-base
      - ca-certificates
      - openssl
      - libpq-18
      - zlib

environment:
  contents:
    packages:
      - wolfi-base
      - wolfi-baselayout
      - busybox
      - build-base
      - rust
      - rustup
      - cargo-auditable
      - git
      - pkgconf
      - clang
      - curl
      - unzip
      - openssl-dev
      - postgresql-dev 
      - zlib-dev 

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/dani-garcia/vaultwarden
      tag: ${{package.version}}
      expected-commit: 5d84f17600e179280e44c391b92ee9eecc2b7cdc
  
  - name: fetch-sources
    runs: |
      mkdir -p /home/builder/vaultwarden
      cp -r ./* /home/builder/vaultwarden/
      
  - name: build-vaultwarden
    working-directory: /home/builder/vaultwarden
    runs: |
      export FEATURES="postgresql"
      export VW_VERSION="${{package.version}}"

      rustup target add $CARGO_BUILD_TARGET
      
      echo "Building Vaultwarden version: ${VW_VERSION} for target: $CARGO_BUILD_TARGET"

      cargo auditable build \
        --features ${FEATURES} \
        --release \
        --target $CARGO_BUILD_TARGET \
        --bin vaultwarden

  - name: fetch-web-vault
    working-directory: /home/builder
    runs: |
      WEB_VAULT_VERSION="2025.9.1" 
      WEB_VAULT_URL="https://github.com/dani-garcia/bw_web_builds/releases/download/v${WEB_VAULT_VERSION}/bw_web_v${WEB_VAULT_VERSION}.tar.gz"
      
      echo "Fetching Web Vault from ${WEB_VAULT_URL}"
      mkdir -p /home/builder/web-vault
      # Use curl and tar to download and extract the web-vault contents
      curl -L "${WEB_VAULT_URL}" | tar -xz -C /home/builder/web-vault --strip-components=1

  - name: package-installation
    working-directory: /home/builder/vaultwarden
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      cp target/$CARGO_BUILD_TARGET/release/vaultwarden ${{targets.destdir}}/usr/bin/vaultwarden
      
      mkdir -p ${{targets.destdir}}/usr/share/vaultwarden/web-vault
      cp -r /home/builder/web-vault/* ${{targets.destdir}}/usr/share/vaultwarden/web-vault/
      
      mkdir -p ${{targets.destdir}}/usr/share/vaultwarden/
      cp -r ./docker/healthcheck.sh ./docker/start.sh ${{targets.destdir}}/usr/share/vaultwarden/
      
      mkdir -p ${{targets.destdir}}/var/lib/vaultwarden
      
      ln -sf /usr/share/vaultwarden/start.sh ${{targets.destdir}}/usr/bin/vaultwarden-start
      ln -sf /usr/share/vaultwarden/healthcheck.sh ${{targets.destdir}}/usr/bin/vaultwarden-healthcheck
