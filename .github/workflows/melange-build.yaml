name: Build Packages

on: 
  push:
    branches: ["main"]
    paths: ["src/packages/**/melange.yaml"]

permissions:
  contents: read

jobs:
  changed-files:
    runs-on: ubuntu-24.04
    outputs:
      packages: ${{ steps.changed-files.outputs.all_changed_files }}   
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # 46.0.5
        with:
          files: src/packages/**/melange.yaml
          matrix: true      
  
  build-dependancies:
    needs: changed-files
    if: ${{ needs.changed-files.outputs.packages != '[]' }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-24.04
          - arch: aarch64
            runner: ubuntu-24.04-arm
      max-parallel: 2
      fail-fast: true
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Create Weekly Cache Key
        id: cache
        run: echo "key=$(date -u +'%G-%V')" >> $GITHUB_OUTPUT

      - name: Restore build dependancies
        id: cache-restore
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: build-dependancies-${{ matrix.arch }}-${{ steps.cache.outputs.key }}
          path: |
            /usr/local/bin/jf
            /usr/local/bin/bwrap
            /usr/local/bin/melange
            /usr/local/bin/yq
          lookup-only: true
      
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        with:
          go-version: '1.24'
          check-latest: true
  
      - name: Build yq
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        run: |
          git clone https://github.com/mikefarah/yq
          pushd yq
          GOAMD64="v2" GOARM64="v8.0" go build -o /usr/local/bin/yq -ldflags -w -trimpath -buildmode default yq.go
          popd
          rm -rf yq

      - name: Build jfrog-cli
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        run: |
          git clone https://github.com/jfrog/jfrog-cli
          pushd jfrog-cli
          GOAMD64="v2" GOARM64="v8.0" go build -o /usr/local/bin/jf -ldflags -w -trimpath -buildmode default main.go
          popd
          rm -rf jfrog-cli

      - name: Build bubblewrap
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        run: |
          sudo apt update
          sudo apt install -y libcap-dev meson ninja-build pkg-config
          git clone https://github.com/containers/bubblewrap
          pushd bubblewrap
          meson setup --prefix=/usr/local -Drequire_userns=true . output
          cd output
          ninja
          sudo ninja install
          popd
          rm -rf bubblewrap

      - name: Build melange
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          git clone https://github.com/chainguard-dev/melange
          pushd melange
          GOAMD64="v2" GOARM64="v8.0" go build -o /usr/local/bin/melange -ldflags -w -trimpath -buildmode default .
          popd
          rm -rf melange
      
      - name: Cache build dependancies
        if: ${{ always() && steps.cache-restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: build-dependancies-${{ matrix.arch }}-${{ steps.cache.outputs.key }}
          path: |
            /usr/local/bin/jf
            /usr/local/bin/bwrap
            /usr/local/bin/melange
            /usr/local/bin/yq
  
  build:
    needs: [changed-files,build-dependancies]
    if: ${{ needs.changed-files.outputs.packages != '[]' }}
    strategy:
      matrix:
        packages: ${{ fromJSON(needs.changed-files.outputs.packages) }}
        include:
          - arch: x86_64
            runner: ubuntu-24.04
          - arch: aarch64
            runner: ubuntu-24.04-arm
      max-parallel: 4
      fail-fast: false
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Retreive Cache Key
        id: cache
        run: echo "key=$(date -u +'%G-%V')" >> $GITHUB_OUTPUT

      - name: Restore build dependancies
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: build-dependancies-${{ matrix.arch }}-${{ steps.cache.outputs.key }}
          path: |
            /usr/local/bin/jf
            /usr/local/bin/bwrap
            /usr/local/bin/melange
            /usr/local/bin/yq
      
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build Packages
        uses: d4rkfella/actions/melange-build@main
        with:
          archs: ${{ matrix.arch }}
          artifactory-access-token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          artifactory-url: https://packages.darkfellanetwork.com
          artifactory-repository-path: wolfi-apk
          config: ${{ matrix.packages }}
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          namespace: wolfi
          pipeline-dir: ${{ github.workspace }}/pipelines
          repository-append: https://packages.darkfellanetwork.com/wolfi-os,https://packages.wolfi.dev/os
          keyring-append: https://packages.darkfellanetwork.com/wolfi-os/melange.rsa.pub,https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
          tests-repository-append: https://packages.darkfellanetwork.com/wolfi-os,https://packages.wolfi.dev/os
          tests-keyring-append: https://packages.darkfellanetwork.com/wolfi-os/melange.rsa.pub,https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
        env:
          MELANGE_PRIVATE_KEY: ${{ secrets.MELANGE_PRIVATE_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
