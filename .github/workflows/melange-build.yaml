name: Build Packages

on: 
  push:
    branches: ["main"]
    paths: ["src/packages/**/melange.yaml"]

permissions:
  contents: read

jobs:
  changed-files:
    runs-on: ubuntu-24.04
    outputs:
      packages: ${{ steps.changed-files.outputs.all_changed_files }}   
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      
      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@2f7c5bfce28377bc069a65ba478de0a74aa0ca32 # 46.0.1
        with:
          files: src/packages/**/melange.yaml
          matrix: true      
  
  build:
    needs: changed-files
    runs-on: ubuntu-24.04
    if: ${{ needs.changed-files.outputs.packages != '[]' }}
    strategy:
      matrix:
        packages: ${{ fromJSON(needs.changed-files.outputs.packages) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: 'Install dependencies (bubblewrap)'
        shell: bash
        run: |
          sudo apt install -y libcap-dev meson
          git clone https://github.com/containers/bubblewrap
          cd bubblewrap
          meson setup _builddir --prefix=/usr -Drequire_userns=true
          meson compile -C _builddir
          meson test -C _builddir
          sudo meson install -C _builddir
          rm -rf ${{ github.workspace }}/bubblewrap
      
      - name: Install Melange
        run: |
          brew install melange
              
      - name: Generate snapshot date
        id: build-date
        run: |
          echo "date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Save private key
        run: |
          set +x
          echo -n "${{ secrets.MELANGE_PRIVATE_KEY }}" > ${{ github.workspace }}/melange.rsa
          chmod 400 ${{ github.workspace }}/melange.rsa
          set -x
      
      - name: Build Packages
        uses: d4rkfella/actions/melange-build@main
        with:
          config: ${{ matrix.packages }}
          archs: amd64
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          namespace: wolfi
          pipeline-dir: ${{ github.workspace }}/pipelines

      - name: Run Tests
        run: |
          sudo /home/linuxbrew/.linuxbrew/bin/melange test ${{ matrix.packages }} \
          --arch amd64 \
          --source-dir ${{ github.workspace }} \
          --pipeline-dirs ${{ github.workspace }}/pipelines \
          --repository-append ${{ github.workspace }}/packages \
          --repository-append https://packages.wolfi.dev/os \
          --repository-append https://packages.darkfellanetwork.com \
          --keyring-append ${{ github.workspace }}/melange.rsa.pub \
          --keyring-append https://packages.wolfi.dev/os/wolfi-signing.rsa.pub \
          --keyring-append https://packages.darkfellanetwork.com/melange.rsa.pub
          
      - name: Generate Index and Upload output files to S3 bucket
        run: |
          if aws s3 ls s3://packages/x86_64/APKINDEX.tar.gz --endpoint-url=$ENDPOINT_URL > /dev/null 2>&1; then
            echo "APKINDEX.tar.gz found in S3 bucket. Downloading and adding --source and --merge flags."
            aws s3 cp s3://packages/x86_64/APKINDEX.tar.gz /tmp/APKINDEX.tar.gz --endpoint-url=$ENDPOINT_URL
            additional_flags="--source /tmp/APKINDEX.tar.gz --merge"
          else
            echo "APKINDEX.tar.gz not found in S3 bucket. Skipping --source and --merge flags."
            additional_flags=""
          fi
      
          melange_command="melange index --signing-key ${{ github.workspace }}/melange.rsa --output packages/x86_64/APKINDEX.tar.gz packages/x86_64/*.apk"
      
          if [[ -n "$additional_flags" ]]; then
            melange_command+=" $additional_flags"
          fi
          
          echo "Running command: $melange_command"
          eval $melange_command

          aws s3 cp --recursive packages/ s3://packages/ --endpoint-url $ENDPOINT_URL --checksum-algorithm CRC32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
