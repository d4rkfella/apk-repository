name: Update Melange Packages

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Allows manual trigger

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      identifiers: ${{ steps.extract-ids.outputs.identifiers }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install yq
        run: |
          echo "Installing yq..."
          sudo apt-get update
          sudo apt-get install -y jq
          wget https://github.com/mikefarah/yq/releases/download/v4.18.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Extract identifiers and file paths
        id: extract-ids
        run: |
          echo "Extracting identifiers and file paths..."
      
          # Find all melange.yaml files and extract the identifier and their paths
          identifiers_and_paths=$(find . -name "melange.yaml" -exec bash -c '
            file="{}"
            # Extract the identifier from the file
            identifier=$(yq ".update.release-monitor.identifier" "$file")
            # Ensure the identifier is valid (not null or empty)
            if [[ "$identifier" != "null" && -n "$identifier" ]]; then
              echo "$file,$identifier"
            fi
          ' \;)
      
          echo "Found identifiers and paths:"
          echo "$identifiers_and_paths"
      
          # Initialize the array
          identifiers_array=()
      
          # Process each extracted entry and create the necessary JSON structure
          while IFS=, read -r path identifier; do
            # Add the file path and identifier to the array in the format needed
            identifiers_array+=("{\"path\":\"$path\",\"identifier\":\"$identifier\"}")
          done <<< "$identifiers_and_paths"
      
          # Join array elements into a single string with commas
          identifiers_json="[$(printf "%s," "${identifiers_array[@]}" | sed 's/,$//')]"
      
          echo "Array of identifiers and paths: $identifiers_json"
      
          # Set the result as an output using GITHUB_OUTPUT
          echo "identifiers=$identifiers_json" >> $GITHUB_OUTPUT

  release-monitoring:
    runs-on: ubuntu-latest
    needs: check-updates
    strategy:
      matrix:
        identifier: ${{ fromJson(needs.check-updates.outputs.identifiers) }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run release-monitoring for each identifier
        id: release-monitoring
        uses: chainguard-images/actions/release-monitoring@0c41b080c7a4d6f7caf510a1c6f67d593f687789 # main
        with:
          project-id: ${{ matrix.identifier.identifier }}

      - name: Check if an update is available
        run: |
          latest_version="${{ steps.release-monitoring.outputs.latest-version }}"
          current_version=$(yq ".packages.version" "${{ matrix.identifier.path }}")
          
          if [[ "$latest_version" > "$current_version" ]]; then
            echo "New version available: $latest_version. Proceeding with version bump."
            melange bump --file "${{ matrix.identifier.path }}"
          else
            echo "No new version available or the version is not newer. Skipping version bump."
          fi
