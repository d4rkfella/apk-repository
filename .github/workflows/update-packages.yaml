name: Update Melange Packages

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup matrix
        id: set-matrix
        run: |
          files=$(find . -name "melange.yaml" -print0 | xargs -0 -n1 | jq -R . | jq -cs '{path: .}')
          echo "matrix=$files" >> "$GITHUB_OUTPUT"

  setup:
    needs: prepare-matrix
    runs-on: ubuntu-24.04
    steps:
      - name: Create Cache Key
        id: cache
        run: echo "key=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Check for cached image
        id: check-cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: autoupdate-${{ steps.cache.outputs.key }}
          path: melange-autoupdate.tar
          lookup-only: true

      - name: Preload Image
        if: ${{ always() && steps.check-cache.outputs.cache-hit != 'true' }}
        run: |
          docker pull ghcr.io/d4rkfella/melange-autoupdate:rolling
          docker save ghcr.io/d4rkfella/melange-autoupdate:rolling > melange-autoupdate.tar

      - name: Cache Image
        if: ${{ always() && steps.check-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: autoupdate-${{ steps.cache.outputs.key }}
          path: melange-autoupdate.tar
  
  update-packages:
    needs: [prepare-matrix, setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: ${{ fromJson(needs.prepare-matrix.outputs.matrix).path }}
      fail-fast: false
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Retreive Cache Key
        id: cache
        run: echo "key=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Restore Image
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: autoupdate-${{ steps.cache.outputs.key }}
          path: melange-autoupdate.tar

      - name: Load Image
        run: |
          docker load < melange-autoupdate.tar
      
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for updates
        id: check-updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm --user "$(id -u):$(id -g)" \
            -e GITHUB_TOKEN="$GITHUB_TOKEN" \
            -v "${{ github.workspace }}:${{ github.workspace }}" \
            -w "${{ github.workspace }}" \
            ghcr.io/d4rkfella/melange-autoupdate:rolling \
            "${{ matrix.path }}"

      - name: Read output.json
        id: read-output
        run: |
          echo "bumped=$(jq -r '.bumped' "${{ github.workspace }}/output.json")" >> $GITHUB_OUTPUT
          echo "package_name=$(jq -r '.package_name' "${{ github.workspace }}/output.json")" >> $GITHUB_OUTPUT
          echo "new_version=$(jq -r '.new_version' "${{ github.workspace }}/output.json")" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.read-output.outputs.bumped == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          title: '${{ steps.read-output.outputs.package_name }}/${{ steps.read-output.outputs.new_version }} package update'
          add-paths: "${{ matrix.path }}"
          branch: 'update-${{ steps.read-output.outputs.package_name }}'
          body-path: "${{ github.workspace }}/pr_body.md"
          commit-message: '${{ steps.read-output.outputs.package_name }}/${{ steps.read-output.outputs.new_version }} package update'
          sign-commits: true
          labels: |
            automated-pr
            version-bump
