name: Build Packages

on: 
  push:
    branches: ["main"]
    paths: ["src/packages/**/melange.yaml"]

permissions:
  contents: read

jobs:
  changed-files:
    runs-on: ubuntu-24.04
    outputs:
      packages: ${{ steps.changed-files.outputs.all_changed_files }}   
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # 46.0.5
        with:
          files: src/packages/**/melange.yaml
          matrix: true      

  build:
    needs: changed-files
    runs-on: apk-repository-runner
    if: ${{ needs.changed-files.outputs.packages != '[]' }}
    strategy:
      matrix:
        packages: ${{ fromJSON(needs.changed-files.outputs.packages) }}

      max-parallel: 4
      fail-fast: false
    steps:             
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: 'Install qemu emulator binaries'
        shell: bash
        run: |
          sudo apt update && sudo apt install -y qemu-user-static
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: '1.24'
          check-latest: true
      - name: 'Install dependencies'
        shell: bash
        run: |
          sudo apt install -y build-essential git jq
      # TODO: the bubblewrap package available from "apt install"
      # is outdated and missing newer features such as --clearenv flag,
      # so instead we download the wolfi .apk and use the binary in there
      - name: 'Install dependencies (bubblewrap)'
        shell: bash
        run: |
          sudo apt install -y libcap-dev meson ninja-build pkg-config
          git clone https://github.com/containers/bubblewrap
          pushd bubblewrap
          meson --prefix=/usr -Drequire_userns=true . output
          cd output
          ninja
          sudo ninja install
          popd
          rm -rf bubblewrap
  
      - name: 'Install melange'
        shell: bash
        run: |
          set -ex
  
          TMP_CLONE_DIR="$(mktemp -d)"
          git clone https://github.com/chainguard-dev/melange "${TMP_CLONE_DIR}"
          pushd "${TMP_CLONE_DIR}"
          make melange
          sudo env "PATH=$PATH" make install
          popd
          rm -rf "${TMP_CLONE_DIR}"
  
          if [[ ! -z ${tag} ]]; then
            case "$(echo $RUNNER_ARCH | awk '{print tolower($0)}')" in
            x86|x64) ARCH=amd64;;
            arm64)   ARCH=arm64;;
            *)
              echo Unsupported RUNNER_ARCH \"$RUNNER_ARCH\"
              exit -1
              ;;
            esac
            case "$(echo $RUNNER_OS | awk '{print tolower($0)}')" in
            "linux") OS=linux;;
            "macos") OS=osx;;
            *)
              echo Unsupported RUNNER_OS \"$RUNNER_OS\"
              exit -1
              ;;
            esac
  
            without_v=${tag#"v"}
            echo "Installing melange @ ${tag}"
            curl -fsL https://github.com/chainguard-dev/melange/releases/download/${tag}/melange_${without_v}_${OS}_${ARCH}.tar.gz | sudo tar xzf - --strip-components=1 -C /usr/local/bin
          fi
  
          melange version

      - name: Build Packages
        uses: d4rkfella/actions/melange-build@main
        with:
          archs: aarch64
          artifactory-access-token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          artifactory-url: https://packages.darkfellanetwork.com
          artifactory-repository-path: wolfi-apk
          config: ${{ matrix.packages }}
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          namespace: wolfi
          pipeline-dir: ${{ github.workspace }}/pipelines
          repository-append: https://packages.darkfellanetwork.com/wolfi-os,https://packages.wolfi.dev/os
          keyring-append: https://packages.darkfellanetwork.com/wolfi-os/melange.rsa.pub,https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
          tests-repository-append: https://packages.darkfellanetwork.com/wolfi-os,https://packages.wolfi.dev/os
          tests-keyring-append: https://packages.darkfellanetwork.com/wolfi-os/melange.rsa.pub,https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
        env:
          MELANGE_PRIVATE_KEY: ${{ secrets.MELANGE_PRIVATE_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         
